if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        // https://github.com/novoda/bintray-release/issues/71
        excludes = ['**/*.kt'] // < ---- Exclude all kotlin files from javadoc file.
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        options.encoding = "utf-8"
        options.charSet = "utf-8"
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }
}

// 强制 Java/JavaDoc 等的编码为 UTF-8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives javadocJar
    archives sourcesJar
}

apply plugin: 'maven'

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

def PUBLISH_GROUP_ID = publishedGroupId //这里可以不是直接申请时候的groupId只要开头是就可以

def PUBLISH_ARTIFACT_ID = artifact

def PUBLISH_VERSION = libraryVersion // android.defaultConfig.versionName //这个是直接获取的库gradle里配置好的版本号，不用到处修改版本号，只需要维护一份就可以。



/****使用maven构建****/

afterEvaluate { project ->
    uploadArchives {
        // 本地目录仓库测试
        repositories {
            mavenDeployer {
                pom.groupId = PUBLISH_GROUP_ID
                pom.artifactId = PUBLISH_ARTIFACT_ID
                pom.version = PUBLISH_VERSION
                repository(url: uri("../repo"))
            }
        }

//        repositories {
//            mavenDeployer {
//                pom.groupId = PUBLISH_GROUP_ID
//                pom.artifactId = PUBLISH_ARTIFACT_ID
//                pom.version = PUBLISH_VERSION
//
//
//                repository(url: FRAMEWORK_RELEASE_REPOSITORY_URL) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }
//                snapshotRepository(url: FRAMEWORK_SPAPSHOT_REPOSITORY_URL) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }
//            }
//        }
    }
}